{"version":3,"sources":["BooksAPI.js","components/Book.js","components/Shelf.js","components/FAB.js","views/Home.js","views/Search.js","Provider/index.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","getAll","fetch","concat","then","res","json","data","books","update","book","shelf","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","search","query","Book","handleChange","_callee","e","result","regenerator_default","a","wrap","_context","prev","next","persist","target","value","_this","props","sent","console","log","moveBook","t0","stop","this","react_default","createElement","className","style","width","height","backgroundImage","imageLinks","thumbnail","onChange","title","authors","Component","Shelf","map","components_Book","assign","key","FAB","Link","to","Home","addBooks","components_Shelf","currentlyReading","wantToRead","read","components_FAB","Search","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","_ref","asyncToGenerator","mark","results","setState","trim","error","_x","apply","arguments","state","_context2","_this2","type","placeholder","length","foundShelf","find","searchBook","textAlign","MyContext","React","createContext","index","filter","newShelf","allShelfs","newBooks","allBooks","bookID","Provider","children","BooksApp","Switch","Route","exact","path","render","Consumer","context","views_Home","views_Search","ReactDOM","BrowserRouter","basename","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.29764a12.chunk.js","sourcesContent":["\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import React,{Component} from 'react'\nimport {update} from \"../BooksAPI\";\n\nclass Book extends Component{\n    handleChange=async e=>{\n        e.persist();\n        try{\n            const shelf=e.target.value;\n            const book=this.props;\n            const result=await update(book,shelf);\n            console.log(result);\n            this.props.moveBook(book,shelf,result);\n        }\n        catch(error){\n            console.log(error);\n        }\n        // console.log(e.target.value);\n    };\n    render(){\n        return(\n            <li>\n                <div className=\"book\">\n                    <div className=\"book-top\">\n                        <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: `url(${this.props.imageLinks? this.props.imageLinks.thumbnail:\"\"})` }}></div>\n                        <div className=\"book-shelf-changer\">\n                            <select onChange={this.handleChange} value={this.props.shelf}>\n                                <option value=\"move\">Move to...</option>\n                                <option value=\"currentlyReading\">Currently Reading</option>\n                                <option value=\"wantToRead\">Want to Read</option>\n                                <option value=\"read\">Read</option>\n                                <option value=\"none\">None</option>\n                            </select>\n                        </div>\n                    </div>\n                    <div className=\"book-title\">{this.props.title}</div>\n                    <div className=\"book-authors\">{this.props.authors?this.props.authors[0]:\"No Author\"}</div>\n                </div>\n            </li>\n        )\n    }\n}\nexport default Book","import React,{Component} from 'react'\nimport Book from './Book'\n\nclass Shelf extends Component{\n    render(){\n        console.log(this.props.title);\n        return (\n            <div className=\"bookshelf\">\n                <h2 className=\"bookshelf-title\">{this.props.title}</h2>\n                <div className=\"bookshelf-books\">\n                    <ol className=\"books-grid\">\n                        {this.props.books && this.props.books.map((book)=>{\n                            return <Book key={book.id}{...book} moveBook={this.props.moveBook}/>\n                        })}\n                    </ol>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Shelf","import React,{Component} from 'react'\nimport {Link} from \"react-router-dom\"\nclass FAB extends Component{\n    render(){\n        return(\n            <div className=\"open-search\">\n                <Link to={\"/search\"}>\n                <button >Add a book</button>\n                </Link>\n            </div>\n        )\n    }\n}\nexport default FAB","import React,{Component} from 'react'\nimport Shelf from '../components/Shelf'\nimport FAB from '../components/FAB'\nimport Book from '../components/Book'\nimport {getAll} from '../BooksAPI'\nclass Home extends Component{\n\n    async componentDidMount(){\n        try{\n            const books=await getAll();\n            // console.log(books);\n            this.props.addBooks(books);\n        }\n        catch(error){\n            console.log(error);\n        }\n    }\n\n    render(){\n        return(\n            <div className=\"list-books\">\n                <div className=\"list-books-title\">\n                    <h1>MyReads</h1>\n                </div>\n                <div className=\"list-books-content\">\n                    <Shelf title=\"Currently Reading\" books={this.props.currentlyReading} moveBook={this.props.moveBook}/>\n                    <Shelf title=\"Want to Read\" books={this.props.wantToRead} moveBook={this.props.moveBook}/>\n                    <Shelf title=\"Read\" books={this.props.read} moveBook={this.props.moveBook}/>\n                </div>\n                <FAB/>\n            </div>\n        )\n    }\n}\nexport default Home","import React,{Component} from 'react'\nimport {Link} from \"react-router-dom\"\nimport {getAll, search} from \"../BooksAPI\";\nimport Book from '../components/Book'\n\nclass Search extends Component{\n\n    constructor(props){\n        super(props);\n        this.state={\n            query:\"\",\n            books:[]\n        }\n    }\n\n    async componentDidMount(){\n        try{\n            const books=await getAll();\n            // console.log(books);\n            this.props.addBooks(books);\n        }\n        catch(error){\n            console.log(error);\n        }\n    }\n\n    handleChange=async e=>{\n      try{\n          const query=e.target.value;\n          this.setState({query});\n          if(query.trim()){\n              const results=await search(query);\n              console.log(results);\n              if(results.error){\n                  this.setState({books:[]})\n              }\n              else{\n                  this.setState({books:results})\n              }\n          }\n          else{\n              this.setState({books:[]})\n          }\n\n      }\n      catch(err) {\n          console.log(err);\n      }\n    };\n\n    render(){\n        return(\n            <div className=\"search-books\">\n                <div className=\"search-books-bar\">\n                    <Link className=\"close-search\" to={\"/\"}>\n                        Close\n                    </Link>\n                    <div className=\"search-books-input-wrapper\">\n                        <input type=\"text\" placeholder=\"Search by title or author\" onChange={this.handleChange} value={this.state.query}/>\n                    </div>\n                </div>\n                <div className=\"search-books-results\">\n                    <ol className=\"books-grid\">\n                        {\n                            this.state.books.length>0 && this.state.books.map((book)=>{{\n                                const foundShelf=this.props.books.find((searchBook)=>{\n                                    return searchBook.id===book.id;\n                                });\n                                if(foundShelf){\n                                    book.shelf=foundShelf.shelf;\n                                }\n                                else{\n                                    book.shelf=\"none\";\n                                }\n                                console.log(foundShelf);\n                            }\n                               return <Book key={book.id} {...book} moveBook={this.props.moveBook}/>\n                            })\n                        }\n                        {this.state.books.length===0 && (\n                            <h1 style={{textAlign:'center'}}>No results found</h1>\n                        )}\n                    </ol>\n                </div>\n            </div>\n        )\n    }\n}\nexport default Search","import React,{Component} from \"react\"\nexport const MyContext=React.createContext();\n\nclass index extends Component{\n    constructor(){\n        super();\n        this.state={\n            books:[],\n            currentlyReading:[],\n            wantToRead:[],\n            read:[],\n            addBooks:(books)=>{\n                const currentlyReading=books.filter((book)=>{\n                    return book.shelf===\"currentlyReading\"\n                });\n                const wantToRead=books.filter((book)=>{\n                    return book.shelf===\"wantToRead\"\n                });\n                const read=books.filter((book)=>{\n                    return book.shelf===\"read\"\n                });\n\n                this.setState({books,currentlyReading,wantToRead,read});\n            },\n            moveBook:(book,newShelf,allShelfs)=>{\n                console.log(newShelf);\n                const newBooks=this.state.books.map((allBooks)=>{\n                    const foundID=allShelfs[newShelf].find(\n                      bookID=> bookID===allBooks.id\n                    );\n                    if(foundID){\n                        allBooks.shelf=newShelf;\n                    }\n                    return allBooks;\n                });\n                this.state.addBooks(newBooks);\n            }\n        }\n    }\n    render(){\n       return (<MyContext.Provider value={{...this.state}}>\n               {this.props.children}\n           </MyContext.Provider>\n        )\n    }\n}\nexport default index","import React from 'react'\nimport {Switch,Route} from \"react-router-dom\"\nimport * as BooksAPI from './BooksAPI'\nimport './App.css'\nimport Shelf from \"./components/Shelf\";\nimport FAB from \"./components/FAB\"\nimport Home from \"./views/Home\"\nimport Search from \"./views/Search\"\nimport Provider,{MyContext} from './Provider/index'\nclass BooksApp extends React.Component {\n    render() {\n    return (\n      <div className=\"app\">\n        <Provider>\n            <Switch>\n                <Route exact path={\"/\"}\n                       render={()=>(\n                       <MyContext.Consumer>\n                         {context=><Home {...context}/>}\n                        </MyContext.Consumer>\n                       )}\n                    />\n                    <Route\n                        exact path={\"/search\"}\n                        render={()=>(\n                          <MyContext.Consumer>\n                              {context=><Search{...context}/>}\n                          </MyContext.Consumer>\n                        )}\n                    />\n            </Switch>\n        </Provider>\n      </div>\n    )\n  }\n}\n\nexport default BooksApp\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {BrowserRouter} from 'react-router-dom'\nimport App from './App'\nimport './index.css'\n\n\nReactDOM.render(<BrowserRouter basename=\"/app\"><App /></BrowserRouter>, document.getElementById('root'));\n"],"sourceRoot":""}